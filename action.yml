name: 'Test CLI commands Action'

description: 'Github Action to test or check outputs of CLI commands üïµÔ∏è‚öôÔ∏èüñ•'

inputs:

    command_line:
        description: 'The command line you want to run'
        required: true
    assert_file_path:
        description: 'repo/path/file.txt'
        required: true
    expected_result:
        description: 'PASSED or FAILED'
        required: false
        default: 'PASSED'
    specific_line:
        description: 'file line to compare'
        required: false
    shell_output_file:
        description: 'Shell that will be used to create the output file'
        required: false
        default: 'bash'

outputs:
  diff-output:
    description: "Diff output"
    value: ${{ steps.diff.outputs.result }}

runs:
  using: "composite"
  steps:

    - name: Create command output file
      run: ${{ inputs.command_line }} &> output.txt || true
      shell: bash

    - name: Create command output file if BASH
      run: |
        if [ bash -eq ${{ inputs.shell_output_file }} ]; then
          ${{ inputs.command_line }} &> output.txt || true
          echo üëç Command OUTPUT exported to output.txt file using BASH
        fi
      shell: bash

    - name: Create command output file if PWSH
      run: |
        if ( pwsh == ${{ inputs.shell_output_file }} ){
          ${{ inputs.command_line }} &> output.txt || true
          echo üëç Command OUTPUT exported to output.txt file using PWSH
        }
      shell: pwsh

    - name: Diff commands
      id: diff
      run: |
        if [ -z ${{ inputs.specific_line }} ]; then
          echo Comparing files
          if diff --strip-trailing-cr output.txt ${{ inputs.assert_file_path }} >/dev/null; then
            result=$(echo "PASSED")
          else
            result=$(echo "FAILED")
          fi
        else
          echo Comparing files specific line
          if diff --strip-trailing-cr <(head -n ${{ inputs.specific_line }} output.txt) <(head -n ${{ inputs.specific_line }} ${{ inputs.assert_file_path }} ) >/dev/null; then
            result=$(echo "PASSED")
          else
            result=$(echo "FAILED")
          fi
        fi
        echo ‚ÜîÔ∏è DIFF command result is $result
        echo "::set-output name=result::$(echo $result)"
      shell: bash

    - run: |
        echo ‚û°Ô∏è DIFF OUTPUT value is ${{ steps.diff.outputs.result }}
        echo ‚û°Ô∏è DIFF EXPECTED value is ${{ inputs.expected_result }}
        if [ ${{ steps.diff.outputs.result }} != ${{ inputs.expected_result }} ]; then
          echo "‚ùå DIFF OUTPUT value NOT EQUAL to DIFF EXPECTED value!"
          if [ -z ${{ inputs.specific_line }} ]; then
            diff --strip-trailing-cr output.txt ${{ inputs.assert_file_path }} | cat -t
          else
            diff --strip-trailing-cr <(head -n ${{ inputs.specific_line }} output.txt) <(head -n ${{ inputs.specific_line }} ${{ inputs.assert_file_path }} ) | cat -t
          fi
          exit 1
        else
          echo "‚úÖ DIFF OUTPUT value EQUAL to DIFF EXPECTED value!"
        fi
      shell: bash

branding:
    icon: 'check'
    color: 'green'