name: 'Test CLI commands Action'

description: 'Github Action to test or check outputs of CLI commands üïµÔ∏è‚öôÔ∏èüñ•'

inputs:

    command_line:
        description: 'The command line you want to run'
        required: true
    assert_file_path:
        description: 'repo/path/file.txt'
        required: false
    expected_result:
        description: 'PASSED or FAILED'
        required: false
        default: 'PASSED'
    specific_line:
        description: 'file line to compare'
        required: false
    contains: 
        description: 'String the file must contain'
        required: false

outputs:
  diff-output:
    description: "Diff output"
    value: ${{ steps.diff.outputs.result }}

runs:
  using: "composite"
  steps:

    - name: install strip-ansi-cli
      run: |
        echo üöß Installing strip-ansi-cli
        npm install --global strip-ansi-cli
      shell: bash

    - name: Create command output file
      run: |
        ${{ inputs.command_line }} &> output.txt || true
        echo üöÄ Command OUTPUT exported to output.txt file
      shell: bash

    - name: Diff commands
      id: diff
      run: |
        if [ ! -z "${{ inputs.contains }}" ]; then
          echo üïµÔ∏è Check if output file contains "${{ inputs.contains }}"
          if grep -q "${{ inputs.contains }}" output.txt; then
            result=$(echo "PASSED")
          else
            result=$(echo "FAILED")
          fi
        elif [ -z ${{ inputs.specific_line }} ]; then
          echo üïµÔ∏è Comparing files
          if diff --strip-trailing-cr -a <(cat output.txt | strip-ansi) <(cat ${{ inputs.assert_file_path }} | strip-ansi) >/dev/null; then
            result=$(echo "PASSED")
          else
            result=$(echo "FAILED")
          fi
        else
          echo üïµÔ∏è Comparing files specific line
          if diff --strip-trailing-cr -a <(head -n ${{ inputs.specific_line }} output.txt | strip-ansi ) <(head -n ${{ inputs.specific_line }} ${{ inputs.assert_file_path }} | strip-ansi ) >/dev/null; then
            result=$(echo "PASSED")
          else
            result=$(echo "FAILED")
          fi
        fi
        echo ‚òû DIFF command result is $result
        echo "::set-output name=result::$(echo $result)"
      shell: bash

    - run: |
        echo ‚òû DIFF OUTPUT value is ${{ steps.diff.outputs.result }}
        echo ‚òû DIFF EXPECTED value is ${{ inputs.expected_result }}
        if [ ${{ steps.diff.outputs.result }} != ${{ inputs.expected_result }} ]; then
          echo "‚ùå DIFF OUTPUT value NOT EQUAL to DIFF EXPECTED value!"
          if [ ! -z "${{ inputs.contains }}" ]; then
            echo Command output doesn't contain ${{ inputs.contains }}
            cat output.txt
          elif [ -z ${{ inputs.specific_line }} ]; then
            diff --strip-trailing-cr -a <(cat output.txt | strip-ansi) <(cat ${{ inputs.assert_file_path }} | strip-ansi) | cat -t
          else
            diff --strip-trailing-cr -a <(head -n ${{ inputs.specific_line }} output.txt | strip-ansi ) <(head -n ${{ inputs.specific_line }} ${{ inputs.assert_file_path }} | strip-ansi ) | cat -t
          fi
          exit 1
        else
          echo ‚úÖ DIFF OUTPUT value EQUAL to DIFF EXPECTED value!
        fi
      shell: bash

branding:
    icon: 'check'
    color: 'green'